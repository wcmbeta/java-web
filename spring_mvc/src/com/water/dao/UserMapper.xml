<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--namespace 命名空间 用于隔离SQL  -->
<!--命名空间绑定Mapper代理-->
<mapper namespace="com.water.dao.UserMapper">
    <!--sql片段-->
    <sql id="selector">
        SELECT * FROM user
    </sql>




    <!--
    #{}     占位符  ? == '广州'
    ${}     字符串拼接   like '%广州%'
    -->
    <!--查询列表需要一个requestMap-->
    <!--配置一个resultMap 指定返回的类型 -->
    <resultMap id="BaseMap" type="com.water.pojo.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="name" property="name"/>
    </resultMap>


    <!--通过id查询一个用户-->
    <!--                        参数类型                    结果类型                    -->
    <select id="findUserById" parameterType="Integer" resultType="com.water.pojo.User">
        SELECT *
        FROM user
        WHERE id = #{v}
    </select>
    <!--通过用户名模糊查询-->
    <!--SQL语句中不要有注释-->
    <!--SELECT  * FROM user WHERE name LIKE '%${value}%'     不能防止sql注入-->
    <!--SELECT  * FROM user WHERE name LIKE "%"#{v}"%"     能防sql注入-->
    <select id="findUserByName" parameterType="String" resultType="com.water.pojo.User">
        SELECT *
        FROM user
        WHERE name LIKE "%"#{v}"%"
    </select>

    <!--添加用户-->
    <!--并返回最新添加对象的id-->
    <insert id="insertUser" parameterType="com.water.pojo.User">
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO user (uid,name,username,password) VALUES (#{uid},#{name},#{username},#{password})
    </insert>

    <update id="updateUser" parameterType="com.water.pojo.User">
        UPDATE user
        SET name = #{name}, username = #{username}, password = #{password}
        WHERE id = #{id}
    </update>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="com.water.pojo.User">
        DELETE FROM user
        WHERE id = #{id}
    </delete>

    <!--根据用户名模糊查询-->
    <select id="findUserByQueryVo" parameterType="QueryVo" resultType="com.water.pojo.User">
        SELECT *
        FROM user
        WHERE name LIKE "%"#{user.name}"%"
    </select>

    <!--简单统计-->
    <select id="countUsers" resultType="Integer">
        SELECT count(1)
        FROM user
    </select>
    <!--动态sql  if where foreatch sql片段-->
    <!--动态参数有存在缺少参数的情况
    WHERE username = #{username} and password = #{password}
    这种无法使用
    且and要放在每个if条件的后面,否则 将 出现where and password = 'abc'
    -->
    <select id="selectUserByUsernameAndPassword" parameterType="User" resultType="User">
        <include refid="selector"/>
        WHERE
        <if test="username != null and username != ''">
             username = #{username} and
        </if>
        <if test="password != null and password != ''">
             password = #{password}
        </if>
    </select>

    <!--查询多个ids (1,2,3)-->
    <select id="selectUserByIds" parameterType="QueryVo" resultType="User">
        <include refid="selector"/>
        <where>

            <foreach collection="ids" item="id" separator="," open = "id in(" close=")">
                #{id}
            </foreach>
        </where>
    </select>
</mapper>